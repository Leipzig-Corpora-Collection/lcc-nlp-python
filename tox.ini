; a generative tox configuration, see: https://tox.wiki/en/latest/user_guide.html#generative-environments
; https://github.com/ionelmc/cookiecutter-pylibrary
[tox]
envlist =
    clean,
    check,
    check-types,
    ;check-bugs,
    check-package,
    ;docs,
    ;{py38,py39,py310,py311,py312,py313,pypy38,pypy39},
    {py310},
    report
ignore_basepython_conflict = true

[testenv]
basepython =
    pypy38: {env:TOXPYTHON:pypy3.8}
    pypy39: {env:TOXPYTHON:pypy3.9}
    py38: {env:TOXPYTHON:python3.8}
    py39: {env:TOXPYTHON:python3.9}
    py310: {env:TOXPYTHON:python3.10}
    py311: {env:TOXPYTHON:python3.11}
    py312: {env:TOXPYTHON:python3.12}
    py313: {env:TOXPYTHON:python3.13}
    {bootstrap,clean,check,check-package,check-types,check-bugs,report,docs,coveralls}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop = false
deps =
    pytest
    pytest-clarity
    pytest-cov
    pytest-mock
    pytest-randomly
extras =
    ; extra dependencies
    warc
commands =
    {posargs:pytest --cov --cov-report=term-missing --cov-report=xml -vv}

[testenv:check]
deps =
    black
    flake8
    mypy
    isort
skip_install = true
commands =
    black --check --diff .
    flake8 --extend-ignore E501,E203,DAR
    isort --verbose --check-only --diff --filter-files .

[testenv:check-package]
deps =
    docutils
    check-manifest
    ;pre-commit
    ;readme-renderer
    ;pygments
    build
    twine
skip_install = true
commands =
    python setup.py check --strict --metadata
    check-manifest .
    ;pre-commit run --all-files --show-diff-on-failure
    python -m build
    twine check --strict dist/*.tar.gz dist/*.whl

[testenv:check-types]
deps =
    mypy
    types-regex
    types-tqdm
skip_install = true
commands =
    mypy .

[testenv:check-bugs]
deps =
    flake8
    flake8-bandit
    flake8-bugbear
skip_install = true
commands =
    flake8 --select B,S src/

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b doctest docs dist/docs
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:report]
deps =
    coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps =
    coverage